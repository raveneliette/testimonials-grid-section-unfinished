@use '../abstracts/variables' as *;
@use '../abstracts/mixins' as *;
@use '../abstracts/functions' as *;

@each $color, $value in $background-colors {
    .bg-#{$color} { // all bg classes will be styled
        background-color: $value;
    }
}

body {
    @include flexCenter;
}

.main {
    max-width: 1076px;

    // Global
    &__img-div {
        margin-right: 1.1rem;
        border-radius: 50%;
    }

    // Card 1 Avatar Border
    & > :nth-of-type(1) &__img-div {
        background-color: $top-avatar-border-color;
    }

    // Card 4 Avatar Border
    & > :nth-of-type(4) &__img-div {
        background-color: $violet;
    }

    // Card 1 and 4 Avatar Border
    & > :nth-of-type(1) &__img-div,
    & > :nth-of-type(4) &__img-div {
        width: 30px;
        height: 30px;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    &__avatar-img {
        border-radius: 50%;
        width: 26px !important; // So it wont follow the parent/default/reset width and height sizes
        height: 26px !important; // So it wont follow the parent/default/reset width and height sizes
    }

    &__span-p {
        margin-top: 1.2rem;
        position: relative;
        z-index: 2;
    }

    &__comments {
        opacity: 70%;
    }

    & > div .verified-p {
        opacity: 50%;
    }

    & > :nth-of-type(1) &__comments,
    & > :nth-of-type(2) &__comments {
        margin-top: 1rem;
    }

    & > :nth-of-type(3) &__comments,
    & > :nth-of-type(4) &__comments,
    & > :nth-of-type(5) &__comments {
        margin-top: 1.5rem;
    }

    & > :nth-of-type(1),
    & > :nth-of-type(2) {
        padding-bottom: 2.4rem;
    }

    & > :nth-of-type(1),
    & > :nth-of-type(5) {
        padding-right: 2.1rem !important;
        position: relative;
    }

    &__bg-pattern-div {
        position: absolute;
        top: 0;
        right: 83px;
        width: 100px;
        z-index: 1;
    }

    & > :nth-of-type(1),
    & > :nth-of-type(2),
    & > :nth-of-type(4) {
        color: text-color(light);
    }

    & > :nth-of-type(3),
    & > :nth-of-type(5) {
        color: text-color(dark);
    }
}